---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: buildah-image-build
  annotations:
    tekton.dev/categories: Image Build
    tekton.dev/tags: image-build
    tekton.dev/displayName: buildah
spec:
  description: >-
    Buildah task builds source into a container image and
    then pushes it to a container registry.

    Buildah Task builds source into a container image using Project Atomic's
    Buildah build tool.It uses Buildah's support for building from Dockerfiles,
    using its buildah bud command.This command executes the directives in the
    Dockerfile to assemble a container image, then pushes that image to a
    container registry.

  params:
    - name: IMAGE_NAME
      description: Reference of the image buildah will produce.
    - name: IMAGE_REPO
      description: Image Repository
    - name: IMAGE_TAG
      description: Image Tag
      default: latest
    - name: BUILDER_IMAGE
      description: The location of the buildah builder image.
      default: registry.redhat.io/rhel8/buildah
    - name: STORAGE_DRIVER
      description: Set buildah storage driver
      default: vfs
    - name: DOCKERFILE
      description: Path to the Dockerfile to build.
      default: ./Dockerfile
    - name: CONTEXT
      description: Path to the directory to use as context.
      default: .
    - name: TLSVERIFY
      description: Verify the TLS on the registry endpoint (for push/pull to a non-TLS registry)
      default: "true"
    - name: FORMAT
      description: The format of the built container, oci or docker
      default: "oci"
    - name: BUILD_EXTRA_ARGS
      description: Extra parameters passed for the build command when building images.
      default: ""
    - name: PUSH_EXTRA_ARGS
      description: Extra parameters passed for the push command when pushing images.
      type: string
      default: ""
    - name: SKIP_PUSH
      description: Skip pushing the built image
      default: "false"
  workspaces:
    - name: source
    - name: dockerconfig
      description: >-
        An optional workspace that allows providing a .docker/config.json file
        for Buildah to access the container registry.
        The file should be placed at the root of the Workspace with name config.json.
      optional: true
  results:
    - name: IMAGE_DIGEST
      description: Digest of the image just built.
    - name: IMAGE_URL
      description: Image repository where the built image would be pushed to
  steps:
    - name: build-and-push
      image: $(params.BUILDER_IMAGE)
      workingDir: $(workspaces.source.path)/images/$(params.IMAGE_NAME)
      script: |
        [ "$(workspaces.dockerconfig.bound)" = "true" ] && DOCKER_CONFIG="$(workspaces.dockerconfig.path)" && export DOCKER_CONFIG

        BUILD_ARGS="$(params.BUILD_EXTRA_ARGS)"
        if [ -f "argfile.conf" ]; then
          BUILD_ARGS="${BUILD_ARGS} --build-arg-file=./argfile.conf"
        fi

        IMAGE="$(params.IMAGE_REPO)/$(params.IMAGE_NAME):$(params.IMAGE_TAG)""

        buildah "--storage-driver=$(params.STORAGE_DRIVER)" bud ${BUILD_ARGS} \
          "--format=$(params.FORMAT)" "--tls-verify=$(params.TLSVERIFY)" \
          -f "$(params.DOCKERFILE)" -t "${IMAGE}" "$(params.CONTEXT)"

        [ "$(params.SKIP_PUSH)" = "true" ] && echo "Push skipped" && exit 0



        buildah "--storage-driver=$(params.STORAGE_DRIVER)" push $(params.PUSH_EXTRA_ARGS) \
          "--tls-verify=$(params.TLSVERIFY)" --digestfile /tmp/image-digest "{IMAGE}" \
          "docker://{IMAGE}"
        tee "$(results.IMAGE_DIGEST.path)" < /tmp/image-digest
        printf '%s' "{IMAGE}" | tee "$(results.IMAGE_URL.path)"
      volumeMounts:
        - name: varlibcontainers
          mountPath: /var/lib/containers
      securityContext:
        capabilities:
          add:
            - SETFCAP
  volumes:
    - name: varlibcontainers
      emptyDir: {}
